# Workflow for deploying documentation to GitHub Pages

# **WARNING**: Make sure that code that is not meant to be public is not included in the ./docs folder or ./site folder.
# This workflow will make the content of the ./docs folder and ./site folder public.

name: ci

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    container:
      image: ubmdriverless/f1tenth:latest
      credentials:
        username: ubmdriverless
        password: ${{ secrets.DOCKER_HUB_TOKEN_READ_ONLY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup ssh
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.PRIVATE_SSH_KEY }}

      - name: Clone private repo
        run: |
          ssh-keyscan -H github.com >> /root/.ssh/known_hosts
          git clone git@github.com:ubm-driverless/ubm-f1tenth.git

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install tools
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate docs
        id: generate_docs
        run: |
          set -e

          echo "pwd: $(pwd)"
          echo "ls: $(ls)"

          # Configurable Paths (mkdocs.yml needs to be updated accordingly)
          ROSDOC2_OUTPUT="./rosdoc2_generated"
          SRC_FOLDER="./src"
          mkdir -p "$ROSDOC2_OUTPUT" "$SRC_FOLDER"
          CPP_PACKAGES_MD="./docs/CPP_PACKAGES.md"
          PYTHON_PACKAGES_MD="./docs/PYTHON_PACKAGES.md"
          echo "rosdoc2_output=$ROSDOC2_OUTPUT" >> $GITHUB_OUTPUT

          # Build C++ packages docs with rosdoc2
          echo "Building docs of C++ packages..."
          source /home/ubm/rosdoc2/bin/activate
          source /opt/ros/foxy/setup.bash
          echo "# C++ Packages" > "$CPP_PACKAGES_MD"
          echo "" >> "$CPP_PACKAGES_MD"
          for f in $(find ./ubm-f1tenth -type f -iname "package.xml"); do
            package_dir="${f%/package.xml}"
            package_name="${package_dir##*/}"
            package_doc_path="$ROSDOC2_OUTPUT/$package_name/index.html"
            if grep -q "rosdoc2" "$f"; then
              echo "Building $package_name with rosdoc2"
              rosdoc2 build -p "$package_dir" -o "$ROSDOC2_OUTPUT/" > /dev/null 2>&1
              if [ -f "$package_doc_path" ]; then
                echo "- [$package_name](../$ROSDOC2_OUTPUT/$package_name/)" >> "$CPP_PACKAGES_MD"
              fi
            fi
          done
          deactivate
           
          # Preparing Python packages for mkdocs
          echo "Preparing Python packages for mkdocs..."
          for f in $(find ./ubm-f1tenth -type f -iname "package.xml"); do
            package_dir="${f%/package.xml}"
            package_name="${package_dir##*/}"
            if grep -q "ament_python" "$f"; then
              echo "Copying $package_name to $SRC_FOLDER"
              cp -r "$package_dir" "$SRC_FOLDER/$package_name"
              touch ./docs/python_packages/$package_name.md
              echo "# $package_name
              ::: src.$package_name
              " > "./docs/python_packages/$package_name.md"
              echo "- [$package_name](python_packages/$package_name.md)" >> "$PYTHON_PACKAGES_MD"
            fi
          done

      - name: Build documentation
        run: |
          export PYTHONPATH="$PYTHONPATH:$(pwd)/src"
          mkdocs build --clean --use-directory-urls

      - name: Add additional files to site
        run: |
          cp -r "${{ steps.generate_docs.outputs.rosdoc2_output }}" ./site/

      - name: Configure Git for Deployment
        run: |
          git config --global --add safe.directory /__w/ubm-docs/ubm-docs

      - name: Deploy with ghp-import
        run: |
          ghp-import --no-jekyll --push --force site
