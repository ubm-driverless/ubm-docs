<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classvesc__driver_1_1VescPacketFactory" kind="class" language="C++" prot="public">
    <compoundname>vesc_driver::VescPacketFactory</compoundname>
    <includes local="no">vesc_packet_factory.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classvesc__driver_1_1VescPacketFactory_1ab8f8a078f13f2360c1070ea77a1ef831" prot="public" static="no">
        <type>std::function&lt; VescPacketPtr(std::shared_ptr&lt; <ref refid="classvesc__driver_1_1VescFrame" kindref="compound">VescFrame</ref> &gt;)&gt;</type>
        <definition>typedef std::function&lt;VescPacketPtr(std::shared_ptr&lt;VescFrame&gt;)&gt; vesc_driver::VescPacketFactory::CreateFn</definition>
        <argsstring></argsstring>
        <name>CreateFn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vesc_driver/vesc_packet_factory.hpp" line="80" column="25" bodyfile="include/vesc_driver/vesc_packet_factory.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classvesc__driver_1_1VescPacketFactory_1ac7c57e2de7fb859475276aabaf1bc4f7" prot="private" static="no">
        <type>std::map&lt; int, CreateFn &gt;</type>
        <definition>typedef std::map&lt;int, CreateFn&gt; vesc_driver::VescPacketFactory::FactoryMap</definition>
        <argsstring></argsstring>
        <name>FactoryMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vesc_driver/vesc_packet_factory.hpp" line="93" column="20" bodyfile="include/vesc_driver/vesc_packet_factory.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classvesc__driver_1_1VescPacketFactory_1a60525154d01a606fbbb04f825138e4b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvesc__driver_1_1VescPacketFactory" kindref="compound">VescPacketFactory</ref> *</type>
        <definition>static VescPacketFactory* vesc_driver::VescPacketFactory::getFactory</definition>
        <argsstring>()</argsstring>
        <name>getFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the global factory object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vesc_driver/vesc_packet_factory.hpp" line="53" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classvesc__driver_1_1VescPacketFactory_1a04ee79a22c166aa5a2a41993f49a22ce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VescPacketPtr</type>
        <definition>static VescPacketPtr vesc_driver::VescPacketFactory::createPacket</definition>
        <argsstring>(const Buffer::const_iterator &amp;begin, const Buffer::const_iterator &amp;end, int *num_bytes_needed, std::string *what)</argsstring>
        <name>createPacket</name>
        <param>
          <type>const Buffer::const_iterator &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const Buffer::const_iterator &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>num_bytes_needed</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>what</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a <ref refid="classvesc__driver_1_1VescPacket" kindref="compound">VescPacket</ref> from a buffer (factory function). Packet must start (start of frame character) at <computeroutput>begin</computeroutput> and complete (end of frame character) before *p end. The buffer element at <computeroutput>end</computeroutput> is not examined, i.e. it can be the past-the-end element. Only returns a packet if the packet is valid, i.e. valid size, matching checksum, complete etc. An empty pointer is returned if a packet cannot be found or if it is invalid. If a valid packet is not found, optional output parameter @what is set to a string providing a reason why a packet was not found. If a packet was not found because additional bytes are needed on the buffer, optional output parameter <computeroutput>num_bytes_needed</computeroutput> will contain the number of bytes needed to either determine the size of the packet or complete the packet. Output parameters <computeroutput>num_bytes_needed</computeroutput> and <computeroutput>what</computeroutput> will be set to 0 and empty if a valid packet is found.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin[in]</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator to a buffer at the start-of-frame character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end[in]</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator to the buffer past-the-end element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_bytes_needed[out]</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes needed to determine the packet size or complete the frame. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>what[out]</parametername>
</parameternamelist>
<parameterdescription>
<para>Human readable string giving a reason why the packet was not found.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to a valid <ref refid="classvesc__driver_1_1VescPacket" kindref="compound">VescPacket</ref> if successful. Otherwise, an empty pointer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vesc_driver/vesc_packet_factory.hpp" line="75" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classvesc__driver_1_1VescPacketFactory_1ade5c5201e79194d1a091f2b1ce600a00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vesc_driver::VescPacketFactory::registerPacketType</definition>
        <argsstring>(int payload_id, CreateFn fn)</argsstring>
        <name>registerPacketType</name>
        <param>
          <type>int</type>
          <declname>payload_id</declname>
        </param>
        <param>
          <type>CreateFn</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a packet type with the factory. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vesc_driver/vesc_packet_factory.hpp" line="83" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvesc__driver_1_1VescPacketFactory_1ae4ad8a114e2edbd2dbff6e79fba2ab48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vesc_driver::VescPacketFactory::VescPacketFactory</definition>
        <argsstring>(const VescPacketFactory &amp;)=delete</argsstring>
        <name>VescPacketFactory</name>
        <param>
          <type>const <ref refid="classvesc__driver_1_1VescPacketFactory" kindref="compound">VescPacketFactory</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete copy constructor and equals operator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vesc_driver/vesc_packet_factory.hpp" line="88" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classvesc__driver_1_1VescPacketFactory_1abbf3c55846a43775f4a54f600af7ecf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvesc__driver_1_1VescPacketFactory" kindref="compound">VescPacketFactory</ref> &amp;</type>
        <definition>VescPacketFactory&amp; vesc_driver::VescPacketFactory::operator=</definition>
        <argsstring>(const VescPacketFactory &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classvesc__driver_1_1VescPacketFactory" kindref="compound">VescPacketFactory</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vesc_driver/vesc_packet_factory.hpp" line="89" column="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classvesc__driver_1_1VescPacketFactory_1a5dad8cff3aa401cebc6ccea58c609e91" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vesc_driver::VescPacketFactory::VescPacketFactory</definition>
        <argsstring>()</argsstring>
        <name>VescPacketFactory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vesc_driver/vesc_packet_factory.hpp" line="92" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classvesc__driver_1_1VescPacketFactory_1a6ace6206a93fb74049734b32ebb3d30a" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FactoryMap *</type>
        <definition>static FactoryMap* vesc_driver::VescPacketFactory::getMap</definition>
        <argsstring>()</argsstring>
        <name>getMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vesc_driver/vesc_packet_factory.hpp" line="94" column="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class for creating VESC packets from raw data. </para>
    </detaileddescription>
    <location file="include/vesc_driver/vesc_packet_factory.hpp" line="50" column="1" bodyfile="include/vesc_driver/vesc_packet_factory.hpp" bodystart="49" bodyend="95"/>
    <listofallmembers>
      <member refid="classvesc__driver_1_1VescPacketFactory_1ab8f8a078f13f2360c1070ea77a1ef831" prot="public" virt="non-virtual"><scope>vesc_driver::VescPacketFactory</scope><name>CreateFn</name></member>
      <member refid="classvesc__driver_1_1VescPacketFactory_1a04ee79a22c166aa5a2a41993f49a22ce" prot="public" virt="non-virtual"><scope>vesc_driver::VescPacketFactory</scope><name>createPacket</name></member>
      <member refid="classvesc__driver_1_1VescPacketFactory_1ac7c57e2de7fb859475276aabaf1bc4f7" prot="private" virt="non-virtual"><scope>vesc_driver::VescPacketFactory</scope><name>FactoryMap</name></member>
      <member refid="classvesc__driver_1_1VescPacketFactory_1a60525154d01a606fbbb04f825138e4b3" prot="public" virt="non-virtual"><scope>vesc_driver::VescPacketFactory</scope><name>getFactory</name></member>
      <member refid="classvesc__driver_1_1VescPacketFactory_1a6ace6206a93fb74049734b32ebb3d30a" prot="private" virt="non-virtual"><scope>vesc_driver::VescPacketFactory</scope><name>getMap</name></member>
      <member refid="classvesc__driver_1_1VescPacketFactory_1abbf3c55846a43775f4a54f600af7ecf8" prot="public" virt="non-virtual"><scope>vesc_driver::VescPacketFactory</scope><name>operator=</name></member>
      <member refid="classvesc__driver_1_1VescPacketFactory_1ade5c5201e79194d1a091f2b1ce600a00" prot="public" virt="non-virtual"><scope>vesc_driver::VescPacketFactory</scope><name>registerPacketType</name></member>
      <member refid="classvesc__driver_1_1VescPacketFactory_1ae4ad8a114e2edbd2dbff6e79fba2ab48" prot="public" virt="non-virtual"><scope>vesc_driver::VescPacketFactory</scope><name>VescPacketFactory</name></member>
      <member refid="classvesc__driver_1_1VescPacketFactory_1a5dad8cff3aa401cebc6ccea58c609e91" prot="private" virt="non-virtual"><scope>vesc_driver::VescPacketFactory</scope><name>VescPacketFactory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
