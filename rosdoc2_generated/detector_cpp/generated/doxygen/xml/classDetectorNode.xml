<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classDetectorNode" kind="class" language="C++" prot="public">
    <compoundname>DetectorNode</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Node</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classDetectorNode_1a4e7da267ced7bb58e43eca80700b9da1" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DetectorNode::rate</definition>
        <argsstring></argsstring>
        <name>rate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="103" column="11" bodyfile="include/detector_node.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a4c1a45195681239c08d51d8800ef058b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int DetectorNode::lam</definition>
        <argsstring></argsstring>
        <name>lam</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="104" column="9" bodyfile="include/detector_node.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a94290aabe745b9f60a7b197614c7b149" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DetectorNode::lambda_angle</definition>
        <argsstring></argsstring>
        <name>lambda_angle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="105" column="11" bodyfile="include/detector_node.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1acef0dbe00ba027d198b979aef4d6411b" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DetectorNode::sigma</definition>
        <argsstring></argsstring>
        <name>sigma</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="106" column="11" bodyfile="include/detector_node.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1ae89ae02688e3ae7112e39fbd467858b7" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DetectorNode::min_2_points_dist</definition>
        <argsstring></argsstring>
        <name>min_2_points_dist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="107" column="11" bodyfile="include/detector_node.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a6fb1caf2f9cc0b595b7c7c10c0dfa83f" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DetectorNode::min_point_cloud_thresh</definition>
        <argsstring></argsstring>
        <name>min_point_cloud_thresh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="108" column="11" bodyfile="include/detector_node.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a5296a60f7cc6f6f9e2e994348711b0f3" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DetectorNode::max_obs_size</definition>
        <argsstring></argsstring>
        <name>max_obs_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="109" column="11" bodyfile="include/detector_node.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1ab12f84a8257cc7abe31de0423fc3c7de" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DetectorNode::max_viewing_distance</definition>
        <argsstring></argsstring>
        <name>max_viewing_distance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="110" column="11" bodyfile="include/detector_node.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1ac746a95dfa532865f56564559aec051f" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DetectorNode::boundaries_inflation</definition>
        <argsstring></argsstring>
        <name>boundaries_inflation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="111" column="11" bodyfile="include/detector_node.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1ab996bed1151df71b57544d2a6f49c2bd" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DetectorNode::car_s</definition>
        <argsstring></argsstring>
        <name>car_s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="112" column="11" bodyfile="include/detector_node.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1aef3391584d8551ea467b841d2d2c2251" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DetectorNode::smallest_d</definition>
        <argsstring></argsstring>
        <name>smallest_d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="113" column="11" bodyfile="include/detector_node.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a8c98a3e5cabcfea76dda3a8406173b86" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DetectorNode::biggest_d</definition>
        <argsstring></argsstring>
        <name>biggest_d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="114" column="11" bodyfile="include/detector_node.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a0881afba66945126786ea0cd8063b223" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DetectorNode::track_length</definition>
        <argsstring></argsstring>
        <name>track_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="115" column="11" bodyfile="include/detector_node.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1aec53b4b082a24a3f776d115452815b4c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DetectorNode::is_debuging_segmentation</definition>
        <argsstring></argsstring>
        <name>is_debuging_segmentation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="116" column="10" bodyfile="include/detector_node.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a609a0d80f52327fe44e9bdc5ebfcd85d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DetectorNode::is_adding_noise</definition>
        <argsstring></argsstring>
        <name>is_adding_noise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="117" column="10" bodyfile="include/detector_node.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a3c10a6cf88a9578c45f3f91f861aa382" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DetectorNode::is_blinking_obstacles_visualization</definition>
        <argsstring></argsstring>
        <name>is_blinking_obstacles_visualization</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="118" column="10" bodyfile="include/detector_node.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1aff19996209cfa38f76093eec077116f7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DetectorNode::is_publishing_corner_of_obstacles</definition>
        <argsstring></argsstring>
        <name>is_publishing_corner_of_obstacles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="119" column="10" bodyfile="include/detector_node.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a0e5d66ad1146a76fc72247387d0b13c3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DetectorNode::is_using_eth_logic</definition>
        <argsstring></argsstring>
        <name>is_using_eth_logic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="120" column="10" bodyfile="include/detector_node.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a9559b0b3b8903d7ff324387493484d64" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DetectorNode::biggest_d_border_margin</definition>
        <argsstring></argsstring>
        <name>biggest_d_border_margin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="121" column="11" bodyfile="include/detector_node.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a3003f586da4339f149720e3bbef454b8" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DetectorNode::smallest_d_border_margin</definition>
        <argsstring></argsstring>
        <name>smallest_d_border_margin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="122" column="11" bodyfile="include/detector_node.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1ace20e74b668ab777247ffef99c52950f" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DetectorNode::current_d_right_border_margin</definition>
        <argsstring></argsstring>
        <name>current_d_right_border_margin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="123" column="11" bodyfile="include/detector_node.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1ac663e4bf9b43b26334385b58ad2059b4" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DetectorNode::current_d_left_border_margin</definition>
        <argsstring></argsstring>
        <name>current_d_left_border_margin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="124" column="11" bodyfile="include/detector_node.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a3cbf6e85aff02ceeac3f7cc697021b9a" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string DetectorNode::file_path</definition>
        <argsstring></argsstring>
        <name>file_path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="125" column="17" bodyfile="include/detector_node.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a97d603e5ff30f157491f2c6bbba2d95c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DetectorNode::path_obtained</definition>
        <argsstring></argsstring>
        <name>path_obtained</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="126" column="10" bodyfile="include/detector_node.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a56947676f401b83007a2708a2e81f12b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DetectorNode::pose_obtained</definition>
        <argsstring></argsstring>
        <name>pose_obtained</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="127" column="10" bodyfile="include/detector_node.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a88601d8831774cddabc21ab0c44224ea" prot="private" static="no" mutable="no">
        <type>geometry_msgs::msg::Pose</type>
        <definition>geometry_msgs::msg::Pose DetectorNode::current_pose</definition>
        <argsstring></argsstring>
        <name>current_pose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="128" column="30" bodyfile="include/detector_node.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a214957a6b5a4cf557ec7011f1c210868" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double DetectorNode::yaw</definition>
        <argsstring></argsstring>
        <name>yaw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="129" column="12" bodyfile="include/detector_node.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a4cece026db019845b77f40154a80ac7a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classObstacle" kindref="compound">Obstacle</ref> &gt;</type>
        <definition>std::vector&lt;Obstacle&gt; DetectorNode::tracked_obstacles</definition>
        <argsstring></argsstring>
        <name>tracked_obstacles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="130" column="17" bodyfile="include/detector_node.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a99ae2e381cee3c4bc18ae5f381237adf" prot="private" static="no" mutable="no">
        <type>sensor_msgs::msg::LaserScan</type>
        <definition>sensor_msgs::msg::LaserScan DetectorNode::scans</definition>
        <argsstring></argsstring>
        <name>scans</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="131" column="33" bodyfile="include/detector_node.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1ae64bfb4baf539c68fd1428fab7a40194" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; float &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;float&gt; &gt; DetectorNode::waypoints</definition>
        <argsstring></argsstring>
        <name>waypoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="132" column="17" bodyfile="include/detector_node.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1aa980a8388b443c80c577d0ae128ed808" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; DetectorNode::s_array</definition>
        <argsstring></argsstring>
        <name>s_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="133" column="17" bodyfile="include/detector_node.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a1c6cfe14e24fc296d108aaf90490aebc" prot="private" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; DetectorNode::cx</definition>
        <argsstring></argsstring>
        <name>cx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="134" column="17" bodyfile="include/detector_node.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a7b6ffd53419b9e6b134241dfe7b197de" prot="private" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; DetectorNode::cy</definition>
        <argsstring></argsstring>
        <name>cy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="135" column="17" bodyfile="include/detector_node.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1aa3b76b95c275d4efea5ecfc7b4130aab" prot="private" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; DetectorNode::d_right_array</definition>
        <argsstring></argsstring>
        <name>d_right_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="136" column="17" bodyfile="include/detector_node.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1aaf491acbb16869607d3b262b808c8c37" prot="private" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; DetectorNode::d_left_array</definition>
        <argsstring></argsstring>
        <name>d_left_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="137" column="17" bodyfile="include/detector_node.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1ab3c3aff85899eddff65d489ce5dd2892" prot="private" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; DetectorNode::psi_rad_array</definition>
        <argsstring></argsstring>
        <name>psi_rad_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="138" column="17" bodyfile="include/detector_node.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1ac0f7da13fb941c634c8a149e253a409d" prot="private" static="no" mutable="no">
        <type>rclcpp::Subscription&lt; f1tenth_msgs::msg::RacelineStamped &gt;::SharedPtr</type>
        <definition>rclcpp::Subscription&lt;f1tenth_msgs::msg::RacelineStamped&gt;::SharedPtr DetectorNode::wypts_sub_</definition>
        <argsstring></argsstring>
        <name>wypts_sub_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="142" column="38" bodyfile="include/detector_node.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1ad5c674000f230d47341999ec492b0c73" prot="private" static="no" mutable="no">
        <type>rclcpp::Subscription&lt; sensor_msgs::msg::LaserScan &gt;::SharedPtr</type>
        <definition>rclcpp::Subscription&lt;sensor_msgs::msg::LaserScan&gt;::SharedPtr DetectorNode::scan_sub</definition>
        <argsstring></argsstring>
        <name>scan_sub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="143" column="38" bodyfile="include/detector_node.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1af9754dad63e7dfab668c078fcf17679b" prot="private" static="no" mutable="no">
        <type>rclcpp::Subscription&lt; nav_msgs::msg::Odometry &gt;::SharedPtr</type>
        <definition>rclcpp::Subscription&lt;nav_msgs::msg::Odometry&gt;::SharedPtr DetectorNode::pose_sub_</definition>
        <argsstring></argsstring>
        <name>pose_sub_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="144" column="38" bodyfile="include/detector_node.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1ae21d0801c3ce23af293ca18ef925a71a" prot="private" static="no" mutable="no">
        <type>rclcpp::Publisher&lt; f1tenth_msgs::msg::ObstacleArray &gt;::SharedPtr</type>
        <definition>rclcpp::Publisher&lt;f1tenth_msgs::msg::ObstacleArray&gt;::SharedPtr DetectorNode::obstacles_msg_pub</definition>
        <argsstring></argsstring>
        <name>obstacles_msg_pub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="145" column="35" bodyfile="include/detector_node.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1ac22166bc5f0ca03938ba614504892b59" prot="private" static="no" mutable="no">
        <type>rclcpp::Publisher&lt; visualization_msgs::msg::Marker &gt;::SharedPtr</type>
        <definition>rclcpp::Publisher&lt;visualization_msgs::msg::Marker&gt;::SharedPtr DetectorNode::csv_raceline_pub</definition>
        <argsstring></argsstring>
        <name>csv_raceline_pub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="146" column="35" bodyfile="include/detector_node.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a952bf3d92e7598c068c9c23203572215" prot="private" static="no" mutable="no">
        <type>rclcpp::Publisher&lt; visualization_msgs::msg::MarkerArray &gt;::SharedPtr</type>
        <definition>rclcpp::Publisher&lt;visualization_msgs::msg::MarkerArray&gt;::SharedPtr DetectorNode::obstacles_marker_pub</definition>
        <argsstring></argsstring>
        <name>obstacles_marker_pub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="147" column="35" bodyfile="include/detector_node.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1ab69cca3b6aad78ba55860dca893f3707" prot="private" static="no" mutable="no">
        <type>rclcpp::Publisher&lt; visualization_msgs::msg::MarkerArray &gt;::SharedPtr</type>
        <definition>rclcpp::Publisher&lt;visualization_msgs::msg::MarkerArray&gt;::SharedPtr DetectorNode::breakpoints_markers_pub</definition>
        <argsstring></argsstring>
        <name>breakpoints_markers_pub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="148" column="35" bodyfile="include/detector_node.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1acc29fbfe7e257ccb982decbd4dee2201" prot="private" static="no" mutable="no">
        <type>rclcpp::Publisher&lt; visualization_msgs::msg::Marker &gt;::SharedPtr</type>
        <definition>rclcpp::Publisher&lt;visualization_msgs::msg::Marker&gt;::SharedPtr DetectorNode::distance_marker_pub</definition>
        <argsstring></argsstring>
        <name>distance_marker_pub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="149" column="35" bodyfile="include/detector_node.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a15c7b25ff1682f996d41430df6fc5311" prot="private" static="no" mutable="no">
        <type>rclcpp::Publisher&lt; visualization_msgs::msg::Marker &gt;::SharedPtr</type>
        <definition>rclcpp::Publisher&lt;visualization_msgs::msg::Marker&gt;::SharedPtr DetectorNode::point_clouds_pub</definition>
        <argsstring></argsstring>
        <name>point_clouds_pub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="150" column="35" bodyfile="include/detector_node.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDetectorNode_1a0b3d86269600980aec7b68871af2bd0c" prot="private" static="no" mutable="no">
        <type>rclcpp::Publisher&lt; visualization_msgs::msg::MarkerArray &gt;::SharedPtr</type>
        <definition>rclcpp::Publisher&lt;visualization_msgs::msg::MarkerArray&gt;::SharedPtr DetectorNode::obstacle_corners_markers_pub</definition>
        <argsstring></argsstring>
        <name>obstacle_corners_markers_pub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="151" column="36" bodyfile="include/detector_node.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classDetectorNode_1a068f5c47580509a394f12e9501e8d26a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DetectorNode::DetectorNode</definition>
        <argsstring>()</argsstring>
        <name>DetectorNode</name>
        <briefdescription>
<para>Construct a new <ref refid="classDetectorNode" kindref="compound">DetectorNode</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes the node, sets up parameters, and creates subscribers and publishers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="99" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classDetectorNode_1a0baa1d336be644f63d29e7d87ce30ccd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DetectorNode::initialize_parameters</definition>
        <argsstring>()</argsstring>
        <name>initialize_parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="153" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1a929f42268dcac978ec788f70cc7e4f68" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DetectorNode::initialize_ROS_communication</definition>
        <argsstring>()</argsstring>
        <name>initialize_ROS_communication</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="155" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1aec3bdcc4f2bac20178e6d5730aa07313" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>tf2::Quaternion</type>
        <definition>tf2::Quaternion DetectorNode::quaternion_from_euler</definition>
        <argsstring>(double roll, double pitch, double yaw)</argsstring>
        <name>quaternion_from_euler</name>
        <param>
          <type>double</type>
          <declname>roll</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yaw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="157" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1a5665e6470bcc678244b0d83d93c4343a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; double, double &gt;</type>
        <definition>std::tuple&lt;double, double&gt; DetectorNode::cartesian_to_frenet</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>cartesian_to_frenet</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Convert quaternion to yaw angle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername></parametername>
</parameternamelist>
<parameterdescription>
<para>roll //TODO: write description </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername></parametername>
</parameternamelist>
<parameterdescription>
<para>pitch //TODO: write description </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername></parametername>
</parameternamelist>
<parameterdescription>
<para>yaw //TODO: write description </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Yaw angle in radians </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="167" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1a2532afdd826f34445ad033a709f063f9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DetectorNode::path_callback</definition>
        <argsstring>(const f1tenth_msgs::msg::RacelineStamped::SharedPtr raceline_msg)</argsstring>
        <name>path_callback</name>
        <param>
          <type>const f1tenth_msgs::msg::RacelineStamped::SharedPtr</type>
          <declname>raceline_msg</declname>
        </param>
        <briefdescription>
<para>Finds the closest waypoint and the distance to a given Cartesian coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x_cartesian</parametername>
</parameternamelist>
<parameterdescription>
<para>(float): X coordinate in Cartesian space. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y_cartesian</parametername>
</parameternamelist>
<parameterdescription>
<para>(float): Y coordinate in Cartesian space. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tuple</parametername>
</parameternamelist>
<parameterdescription>
<para>(s, d) where s is the closest s value, d is the distance to the closest waypoint </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="176" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1aabe98a1d3aa1d9ebd7586a53e9963bf1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DetectorNode::pose_callback</definition>
        <argsstring>(const nav_msgs::msg::Odometry::SharedPtr pose_msg)</argsstring>
        <name>pose_callback</name>
        <param>
          <type>const nav_msgs::msg::Odometry::SharedPtr</type>
          <declname>pose_msg</declname>
        </param>
        <briefdescription>
<para>Callback function for receiving raceline data. </para>
        </briefdescription>
        <detaileddescription>
<para>Processes the data to initialize waypoints and update attributes related to the raceline.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>(RacelineStamped): The raceline message containing waypoint information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="186" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1a68374bd17a4a59ac30a0497ab9722a85" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DetectorNode::scan_callback</definition>
        <argsstring>(const sensor_msgs::msg::LaserScan::SharedPtr msg)</argsstring>
        <name>scan_callback</name>
        <param>
          <type>const sensor_msgs::msg::LaserScan::SharedPtr</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Callback function for receiving pose data. </para>
        </briefdescription>
        <detaileddescription>
<para>Updates the current pose, computes the car&apos;s position relative to waypoints, and calls the control loop.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>(PoseStamped): The pose message containing the current pose of the car. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="195" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1a75f498757f47d25648eff850fcc4f3e8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>visualization_msgs::msg::MarkerArray</type>
        <definition>visualization_msgs::msg::MarkerArray DetectorNode::clearmarkers</definition>
        <argsstring>()</argsstring>
        <name>clearmarkers</name>
        <briefdescription>
<para>Callback function for receiving LaserScan data. </para>
        </briefdescription>
        <detaileddescription>
<para>Updates the scan attribute with the received message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>(LaserScan): The LaserScan message containing scan data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="204" column="42"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1ad4de5e0a90d2dc19cee3bb38e0da55a5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>visualization_msgs::msg::Marker</type>
        <definition>visualization_msgs::msg::Marker DetectorNode::clearmarker</definition>
        <argsstring>()</argsstring>
        <name>clearmarker</name>
        <briefdescription>
<para>Deletes a MarkerArray. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="207" column="37"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1aa53bdd50fdea221ecc735f3612af1807" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>visualization_msgs::msg::MarkerArray</type>
        <definition>visualization_msgs::msg::MarkerArray DetectorNode::clear_obstacle_visualization_markers</definition>
        <argsstring>()</argsstring>
        <name>clear_obstacle_visualization_markers</name>
        <briefdescription>
<para>Deletes a Marker. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="210" column="42"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1a856b0cef1e68e68b346145649f29876a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DetectorNode::hsv_to_rgb</definition>
        <argsstring>(float h, float s, float v, float &amp;r, float &amp;g, float &amp;b)</argsstring>
        <name>hsv_to_rgb</name>
        <param>
          <type>float</type>
          <declname>h</declname>
        </param>
        <param>
          <type>float</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>delete all obstacle markers in list tracked_obstacles <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="213" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1a234365330c4a10a8bc0cb5889a513aff" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DetectorNode::add_white_noise</definition>
        <argsstring>(std::vector&lt; std::pair&lt; float, float &gt;&gt; &amp;points, double noise_level=0.03)</argsstring>
        <name>add_white_noise</name>
        <param>
          <type>std::vector&lt; std::pair&lt; float, float &gt;&gt; &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>double</type>
          <declname>noise_level</declname>
          <defval>0.03</defval>
        </param>
        <briefdescription>
<para>Converts a color from HSV (Hue, Saturation, Value) color space to RGB (Red, Green, Blue) color space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="216" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1a954316ea41edd8eb43a75b536bad1459" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DetectorNode::publish_sd_markers</definition>
        <argsstring>(double s, double d, const std::string &amp;frame_id)</argsstring>
        <name>publish_sd_markers</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>frame_id</declname>
        </param>
        <briefdescription>
<para>adds Gaussian white noise to each component of a set of 2D points </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="219" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1a49230932b5acc43b65592c458c5f5cc2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DetectorNode::publish_segmented_points</definition>
        <argsstring>(const std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt;&gt;&gt; &amp;points)</argsstring>
        <name>publish_segmented_points</name>
        <param>
          <type>const std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt;&gt;&gt; &amp;</type>
          <declname>points</declname>
        </param>
        <briefdescription>
<para>Publish a visualization of the s and d markers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="224" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1ab225cf89cf54398e6e60ec7786943b9c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DetectorNode::publish_breakpoints</definition>
        <argsstring>(const std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt;&gt;&gt; &amp;objects_pointcloud_list)</argsstring>
        <name>publish_breakpoints</name>
        <param>
          <type>const std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt;&gt;&gt; &amp;</type>
          <declname>objects_pointcloud_list</declname>
        </param>
        <briefdescription>
<para>Publish a visualization of the point clouds after segmentation in different colors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="229" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1adb0a2027b60b49a277b055722f29094c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DetectorNode::publish_distance_and_line_marker</definition>
        <argsstring>(float distance, float angle, rclcpp::Time stamp, std::string frame_id)</argsstring>
        <name>publish_distance_and_line_marker</name>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>rclcpp::Time</type>
          <declname>stamp</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>frame_id</declname>
        </param>
        <briefdescription>
<para>Publish a visualization of the first and last point of each segment after segmentation of the point clouds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="234" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1a76d65c4869bce5c4986c86f2d3b2734c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DetectorNode::publish_csv_raceline</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>publish_csv_raceline</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="236" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1af86ede96e429ff06629d66d45650e621" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DetectorNode::publish_obstacles_message</definition>
        <argsstring>()</argsstring>
        <name>publish_obstacles_message</name>
        <briefdescription>
<para>Publish the raceline. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="241" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1aa0ad3e82d15e33402a5e85e75b1f0905" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DetectorNode::publish_corners_obstacles</definition>
        <argsstring>(const std::vector&lt; std::pair&lt; double, double &gt;&gt; &amp;corners)</argsstring>
        <name>publish_corners_obstacles</name>
        <param>
          <type>const std::vector&lt; std::pair&lt; double, double &gt;&gt; &amp;</type>
          <declname>corners</declname>
        </param>
        <briefdescription>
<para>Publish a message of the computed Obstacles. </para>
        </briefdescription>
        <detaileddescription>
<para>Publish a message of the computed Obstacles (center, size, and 4 corners all in cartesian coordinates) if is_publishing_corner_of_obstacles visualize also the 4 corners </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="249" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1ae237b824d5bf2a51f2cee374a115ce11" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DetectorNode::publish_blinking_obstacles_markers</definition>
        <argsstring>()</argsstring>
        <name>publish_blinking_obstacles_markers</name>
        <briefdescription>
<para>Publish a visualization of the corners of the obstacles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="254" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1a3a1977bdac27e61b86052a37ae160c39" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DetectorNode::publish_obstacles_markers</definition>
        <argsstring>()</argsstring>
        <name>publish_obstacles_markers</name>
        <briefdescription>
<para>Publish a visualization of the computed Obstacles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="259" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1aab8b88531112e6833b5b76a1e35cc0a8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DetectorNode::normalize_s</definition>
        <argsstring>(double x, double track_length)</argsstring>
        <name>normalize_s</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>track_length</declname>
        </param>
        <briefdescription>
<para>Publish a visualization of the computed Obstacles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="264" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1a365c31ac6a5fde0c603c23578867a7e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DetectorNode::bisect_left</definition>
        <argsstring>(std::vector&lt; double &gt; s_array, double x)</argsstring>
        <name>bisect_left</name>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>s_array</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Normalizes a position x on a circular track of length track_length to ensure it lies within the range (modulus operation) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="268" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1a60147225581f6e2361c5977e925ddcb7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DetectorNode::laser_point_on_track</definition>
        <argsstring>(double s, double d)</argsstring>
        <name>laser_point_on_track</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Performs a binary search to find and return the index of the leftmost position in a sorted array such that the value &lt; x. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="271" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1af7e56202b3977289597a19fd7eba3237" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt; &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;std::pair&lt;double, double&gt; &gt; &gt; DetectorNode::scans_2_obs_point_cloud</definition>
        <argsstring>()</argsstring>
        <name>scans_2_obs_point_cloud</name>
        <briefdescription>
<para>Checks if a given point (s, d) is on the track. The function considers various conditions: </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>car&apos;s viewing distance</para>
</listitem><listitem><para>track&apos;s width</para>
</listitem><listitem><para>point&apos;s position relative to the track&apos;s centerline. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>(float): Frenet-like s-coordinate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>(float): Frenet-like d-coordinate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool: True if the point is on the track, False otherwise.</para>
</simplesect>
TODO: Revise logic after real car tests </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="285" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1aac725c223c710685a80d9bf8ae1ba7ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classObstacle" kindref="compound">Obstacle</ref> &gt;</type>
        <definition>std::vector&lt;Obstacle&gt; DetectorNode::obs_point_clouds_2_obs_array</definition>
        <argsstring>(std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt;&gt;&gt; objects_pointcloud_list)</argsstring>
        <name>obs_point_clouds_2_obs_array</name>
        <param>
          <type>std::vector&lt; std::vector&lt; std::pair&lt; double, double &gt;&gt;&gt;</type>
          <declname>objects_pointcloud_list</declname>
        </param>
        <briefdescription>
<para>Converts the lidar scans to a 2D PointCloud and segments them into objects. </para>
        </briefdescription>
        <detaileddescription>
<para>1) it transforms the scan ranges into a cloud point. 2) it segments the cloud point into smaller point clouds that represent potential objects using an adaptive method. 3) it removes point clouds that are too small, too big, or have their center point not on the track.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>debug_segmentation</parametername>
</parameternamelist>
<parameterdescription>
<para>- temporary argument to visualize segmentation logic </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eth_logic</parametername>
</parameternamelist>
<parameterdescription>
<para>= temporary argument whether to use eth logic or disparity node condition for doing segmentation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: A list of segmented point clouds, each representing a potential object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="298" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1a55f843354b8cc6d69cec52770f4ef4e6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DetectorNode::check_obstacles</definition>
        <argsstring>(std::vector&lt; Obstacle &gt; &amp;current_obstacles)</argsstring>
        <name>check_obstacles</name>
        <param>
          <type>std::vector&lt; <ref refid="classObstacle" kindref="compound">Obstacle</ref> &gt; &amp;</type>
          <declname>current_obstacles</declname>
        </param>
        <briefdescription>
<para>Converts a list of point clouds (representing obstacles) into an array of <ref refid="classObstacle" kindref="compound">Obstacle</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
<para>Each point cloud is processed to fit a rectangle around the points. Computes the attributes of the <ref refid="classObstacle" kindref="compound">Obstacle</ref> object: center, size, and orientation.</para>
<para><simplesect kind="return"><para>list: A list of <ref refid="classObstacle" kindref="compound">Obstacle</ref> objects with computed attributes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="308" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classDetectorNode_1abffe8e1cf77f647b41f459b4931b5fa8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DetectorNode::control_loop</definition>
        <argsstring>()</argsstring>
        <name>control_loop</name>
        <briefdescription>
<para>Deletes obstacles that exceed a maximum size and updates the list of tracked obstacles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/detector_node.hpp" line="311" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>DetectorNode</label>
        <link refid="classDetectorNode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rclcpp::Node</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>DetectorNode</label>
        <link refid="classDetectorNode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rclcpp::Node</label>
      </node>
    </collaborationgraph>
    <location file="include/detector_node.hpp" line="92" column="39" bodyfile="include/detector_node.hpp" bodystart="92" bodyend="314"/>
    <listofallmembers>
      <member refid="classDetectorNode_1a234365330c4a10a8bc0cb5889a513aff" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>add_white_noise</name></member>
      <member refid="classDetectorNode_1a8c98a3e5cabcfea76dda3a8406173b86" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>biggest_d</name></member>
      <member refid="classDetectorNode_1a9559b0b3b8903d7ff324387493484d64" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>biggest_d_border_margin</name></member>
      <member refid="classDetectorNode_1a365c31ac6a5fde0c603c23578867a7e9" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>bisect_left</name></member>
      <member refid="classDetectorNode_1ac746a95dfa532865f56564559aec051f" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>boundaries_inflation</name></member>
      <member refid="classDetectorNode_1ab69cca3b6aad78ba55860dca893f3707" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>breakpoints_markers_pub</name></member>
      <member refid="classDetectorNode_1ab996bed1151df71b57544d2a6f49c2bd" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>car_s</name></member>
      <member refid="classDetectorNode_1a5665e6470bcc678244b0d83d93c4343a" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>cartesian_to_frenet</name></member>
      <member refid="classDetectorNode_1a55f843354b8cc6d69cec52770f4ef4e6" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>check_obstacles</name></member>
      <member refid="classDetectorNode_1aa53bdd50fdea221ecc735f3612af1807" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>clear_obstacle_visualization_markers</name></member>
      <member refid="classDetectorNode_1ad4de5e0a90d2dc19cee3bb38e0da55a5" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>clearmarker</name></member>
      <member refid="classDetectorNode_1a75f498757f47d25648eff850fcc4f3e8" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>clearmarkers</name></member>
      <member refid="classDetectorNode_1abffe8e1cf77f647b41f459b4931b5fa8" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>control_loop</name></member>
      <member refid="classDetectorNode_1ac22166bc5f0ca03938ba614504892b59" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>csv_raceline_pub</name></member>
      <member refid="classDetectorNode_1ac663e4bf9b43b26334385b58ad2059b4" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>current_d_left_border_margin</name></member>
      <member refid="classDetectorNode_1ace20e74b668ab777247ffef99c52950f" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>current_d_right_border_margin</name></member>
      <member refid="classDetectorNode_1a88601d8831774cddabc21ab0c44224ea" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>current_pose</name></member>
      <member refid="classDetectorNode_1a1c6cfe14e24fc296d108aaf90490aebc" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>cx</name></member>
      <member refid="classDetectorNode_1a7b6ffd53419b9e6b134241dfe7b197de" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>cy</name></member>
      <member refid="classDetectorNode_1aaf491acbb16869607d3b262b808c8c37" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>d_left_array</name></member>
      <member refid="classDetectorNode_1aa3b76b95c275d4efea5ecfc7b4130aab" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>d_right_array</name></member>
      <member refid="classDetectorNode_1a068f5c47580509a394f12e9501e8d26a" prot="public" virt="non-virtual"><scope>DetectorNode</scope><name>DetectorNode</name></member>
      <member refid="classDetectorNode_1acc29fbfe7e257ccb982decbd4dee2201" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>distance_marker_pub</name></member>
      <member refid="classDetectorNode_1a3cbf6e85aff02ceeac3f7cc697021b9a" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>file_path</name></member>
      <member refid="classDetectorNode_1a856b0cef1e68e68b346145649f29876a" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>hsv_to_rgb</name></member>
      <member refid="classDetectorNode_1a0baa1d336be644f63d29e7d87ce30ccd" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>initialize_parameters</name></member>
      <member refid="classDetectorNode_1a929f42268dcac978ec788f70cc7e4f68" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>initialize_ROS_communication</name></member>
      <member refid="classDetectorNode_1a609a0d80f52327fe44e9bdc5ebfcd85d" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>is_adding_noise</name></member>
      <member refid="classDetectorNode_1a3c10a6cf88a9578c45f3f91f861aa382" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>is_blinking_obstacles_visualization</name></member>
      <member refid="classDetectorNode_1aec53b4b082a24a3f776d115452815b4c" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>is_debuging_segmentation</name></member>
      <member refid="classDetectorNode_1aff19996209cfa38f76093eec077116f7" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>is_publishing_corner_of_obstacles</name></member>
      <member refid="classDetectorNode_1a0e5d66ad1146a76fc72247387d0b13c3" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>is_using_eth_logic</name></member>
      <member refid="classDetectorNode_1a4c1a45195681239c08d51d8800ef058b" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>lam</name></member>
      <member refid="classDetectorNode_1a94290aabe745b9f60a7b197614c7b149" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>lambda_angle</name></member>
      <member refid="classDetectorNode_1a60147225581f6e2361c5977e925ddcb7" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>laser_point_on_track</name></member>
      <member refid="classDetectorNode_1a5296a60f7cc6f6f9e2e994348711b0f3" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>max_obs_size</name></member>
      <member refid="classDetectorNode_1ab12f84a8257cc7abe31de0423fc3c7de" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>max_viewing_distance</name></member>
      <member refid="classDetectorNode_1ae89ae02688e3ae7112e39fbd467858b7" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>min_2_points_dist</name></member>
      <member refid="classDetectorNode_1a6fb1caf2f9cc0b595b7c7c10c0dfa83f" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>min_point_cloud_thresh</name></member>
      <member refid="classDetectorNode_1aab8b88531112e6833b5b76a1e35cc0a8" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>normalize_s</name></member>
      <member refid="classDetectorNode_1aac725c223c710685a80d9bf8ae1ba7ec" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>obs_point_clouds_2_obs_array</name></member>
      <member refid="classDetectorNode_1a0b3d86269600980aec7b68871af2bd0c" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>obstacle_corners_markers_pub</name></member>
      <member refid="classDetectorNode_1a952bf3d92e7598c068c9c23203572215" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>obstacles_marker_pub</name></member>
      <member refid="classDetectorNode_1ae21d0801c3ce23af293ca18ef925a71a" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>obstacles_msg_pub</name></member>
      <member refid="classDetectorNode_1a2532afdd826f34445ad033a709f063f9" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>path_callback</name></member>
      <member refid="classDetectorNode_1a97d603e5ff30f157491f2c6bbba2d95c" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>path_obtained</name></member>
      <member refid="classDetectorNode_1a15c7b25ff1682f996d41430df6fc5311" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>point_clouds_pub</name></member>
      <member refid="classDetectorNode_1aabe98a1d3aa1d9ebd7586a53e9963bf1" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>pose_callback</name></member>
      <member refid="classDetectorNode_1a56947676f401b83007a2708a2e81f12b" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>pose_obtained</name></member>
      <member refid="classDetectorNode_1af9754dad63e7dfab668c078fcf17679b" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>pose_sub_</name></member>
      <member refid="classDetectorNode_1ab3c3aff85899eddff65d489ce5dd2892" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>psi_rad_array</name></member>
      <member refid="classDetectorNode_1ae237b824d5bf2a51f2cee374a115ce11" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>publish_blinking_obstacles_markers</name></member>
      <member refid="classDetectorNode_1ab225cf89cf54398e6e60ec7786943b9c" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>publish_breakpoints</name></member>
      <member refid="classDetectorNode_1aa0ad3e82d15e33402a5e85e75b1f0905" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>publish_corners_obstacles</name></member>
      <member refid="classDetectorNode_1a76d65c4869bce5c4986c86f2d3b2734c" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>publish_csv_raceline</name></member>
      <member refid="classDetectorNode_1adb0a2027b60b49a277b055722f29094c" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>publish_distance_and_line_marker</name></member>
      <member refid="classDetectorNode_1a3a1977bdac27e61b86052a37ae160c39" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>publish_obstacles_markers</name></member>
      <member refid="classDetectorNode_1af86ede96e429ff06629d66d45650e621" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>publish_obstacles_message</name></member>
      <member refid="classDetectorNode_1a954316ea41edd8eb43a75b536bad1459" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>publish_sd_markers</name></member>
      <member refid="classDetectorNode_1a49230932b5acc43b65592c458c5f5cc2" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>publish_segmented_points</name></member>
      <member refid="classDetectorNode_1aec3bdcc4f2bac20178e6d5730aa07313" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>quaternion_from_euler</name></member>
      <member refid="classDetectorNode_1a4e7da267ced7bb58e43eca80700b9da1" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>rate</name></member>
      <member refid="classDetectorNode_1aa980a8388b443c80c577d0ae128ed808" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>s_array</name></member>
      <member refid="classDetectorNode_1a68374bd17a4a59ac30a0497ab9722a85" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>scan_callback</name></member>
      <member refid="classDetectorNode_1ad5c674000f230d47341999ec492b0c73" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>scan_sub</name></member>
      <member refid="classDetectorNode_1a99ae2e381cee3c4bc18ae5f381237adf" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>scans</name></member>
      <member refid="classDetectorNode_1af7e56202b3977289597a19fd7eba3237" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>scans_2_obs_point_cloud</name></member>
      <member refid="classDetectorNode_1acef0dbe00ba027d198b979aef4d6411b" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>sigma</name></member>
      <member refid="classDetectorNode_1aef3391584d8551ea467b841d2d2c2251" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>smallest_d</name></member>
      <member refid="classDetectorNode_1a3003f586da4339f149720e3bbef454b8" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>smallest_d_border_margin</name></member>
      <member refid="classDetectorNode_1a0881afba66945126786ea0cd8063b223" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>track_length</name></member>
      <member refid="classDetectorNode_1a4cece026db019845b77f40154a80ac7a" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>tracked_obstacles</name></member>
      <member refid="classDetectorNode_1ae64bfb4baf539c68fd1428fab7a40194" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>waypoints</name></member>
      <member refid="classDetectorNode_1ac0f7da13fb941c634c8a149e253a409d" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>wypts_sub_</name></member>
      <member refid="classDetectorNode_1a214957a6b5a4cf557ec7011f1c210868" prot="private" virt="non-virtual"><scope>DetectorNode</scope><name>yaw</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
